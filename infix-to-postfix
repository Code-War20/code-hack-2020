#include<bits/stdc++.h>
using namespace std;

bool isOperand(char c){
	if((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
		return true;
	else
		return false;
}

int precedence(char c){
	if('c' == '+')
		return 1;
	else if('c' == '-')
		return 1;
	else if('c' == '*')
		return 2;
	else if('c' == '/')
		return 2;
}

string infi2Post(string exp){
	stack<char> s;
	string postfix;
	for(int i = 0; i < exp.length(); i++){
		char c = exp[i];
		if(c == '(')
			s.push(c);
		else if(isOperand(c))
			postfix += c;
		else if(c == '+' || c == '-' || c == '*' || c == '/'){
			if(s.empty()){
				s.push(c);
			}
			else if(!s.empty()){
				if(precedence(c) > precedence(s.top()))
					s.push(c);
				else if(precedence(s.top()) == precedence(c)){
					s.push(c);
				}
				else{
					while((!s.empty()) && (precedence(s.top()) >= precedence(c))){
						postfix += s.top();
						s.pop();
					}
					s.push(c);
				}
			}
		}
		else if(c == ')'){
			while((s.top() != '(') && (!s.empty())){
				postfix += s.top();
				s.pop();
			}
			s.pop();
		}
	}
	while(!s.empty()){
		postfix += s.top();
		s.pop();
	}
	return postfix;
}

int main()
{
	string post;
	getline(cin, post);
	
	cout << infi2Post(post);

	return 0;
}
